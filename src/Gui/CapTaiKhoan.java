package Gui;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.SQLException;

public class CapTaiKhoan extends JFrame {
    private JPanel mainPanel; // ƒê∆∞a mainPanel th√†nh thu·ªôc t√≠nh c·ªßa l·ªõp
    private JButton lastClickedButton; // N√∫t ƒë∆∞·ª£c nh·∫•n tr∆∞·ªõc ƒë√≥

    public CapTaiKhoan() throws SQLException {
        // C·∫•u h√¨nh cho frame
        setTitle("Nh√† H√†ng TH Food");
        setSize(900, 600); // C√≥ th·ªÉ gi·ªØ d√≤ng n√†y ho·∫∑c b·ªè n·∫øu kh√¥ng c·∫ßn thi·∫øt
        setExtendedState(JFrame.MAXIMIZED_BOTH); // ƒê·∫∑t ch∆∞∆°ng tr√¨nh ·ªü ch·∫ø ƒë·ªô to√†n m√†n h√¨nh
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setLocationRelativeTo(null);

        // T·∫°o panel b√™n tr√°i ch·ª©a logo v√† c√°c n√∫t ch·ª©c nƒÉng
        JPanel leftPanel = new JPanel() {
            @Override
            protected void paintComponent(Graphics g) {
                super.paintComponent(g);
                // V·∫Ω h√¨nh n·ªÅn cho leftPanel
                ImageIcon icon = new ImageIcon("background_image.jpg"); // ƒê∆∞·ªùng d·∫´n t·ªõi h√¨nh n·ªÅn cho leftPanel
                Image img = icon.getImage();
                g.drawImage(img, 0, 0, getWidth(), getHeight(), this);
            }
        };
        leftPanel.setLayout(new BorderLayout());
        leftPanel.setBackground(new Color(255, 255, 255)); // M√†u n·ªÅn tr·∫Øng cho leftPanel

        // Logo tr√™n ph·∫ßn n√∫t ch·ª©c nƒÉng
        ImageIcon logoIcon = new ImageIcon("src\\img\\logo2.png");
        Image logoImage = logoIcon.getImage().getScaledInstance(140, 180, Image.SCALE_SMOOTH);
        JLabel logoLabel = new JLabel(new ImageIcon(logoImage));
        logoLabel.setHorizontalAlignment(SwingConstants.CENTER);
        leftPanel.add(logoLabel, BorderLayout.NORTH);

        // Panel ch·ª©a c√°c n√∫t ch·ª©c nƒÉng
        JPanel buttonPanel = new JPanel();
        buttonPanel.setBackground(new Color(255,255,255));
        buttonPanel.setLayout(new BoxLayout(buttonPanel, BoxLayout.Y_AXIS)); // Thay ƒë·ªïi layout th√†nh BoxLayout
        buttonPanel.setOpaque(false); // T·∫Øt n·ªÅn m·∫∑c ƒë·ªãnh c·ªßa panel

        // T·∫°o 2 n√∫t ch·ª©c nƒÉng v·ªõi m√†u n·ªÅn
        String[] buttonLabels = {
                "\uD83D\uDC68\u200D NH√ÇN VI√äN",
                "\uD83D\uDC68\u200D QU·∫¢N L√ù",

        };
        // T·∫°o m·ªôt bi·∫øn ƒë·ªÉ l∆∞u n√∫t ƒê·∫∂T M√ìN
        JButton firstButton = null;

        for (String label : buttonLabels) {
            JButton button = createStyledButton(label); // N√∫t c√≥ m√†u s·∫Øc h√†i h√≤a

            //n·∫øu l√† n√∫t thong ke th√¨ ƒë·ªïi ten nut
            if(label.equals("\uD83D\uDC68\u200D NH√ÇN VI√äN")) {
                button.setText("\uD83D\uDC68\u200D NH√ÇN VI√äN");
            }

            //neu la nut nhan vien thi doi ten nut
            if(label.equals("\uD83D\uDC68\u200D QU·∫¢N L√ù")) {
                button.setText("\uD83D\uDC68\u200D QU·∫¢N L√ù");
            }
            buttonPanel.add(button);
            button.addActionListener(new ButtonClickListener(this));

            // Th√™m kho·∫£ng c√°ch gi·ªØa c√°c n√∫t
            buttonPanel.add(Box.createRigidArea(new Dimension(10, 30))); // Th√™m kho·∫£ng c√°ch 10px gi·ªØa c√°c n√∫t

            // L∆∞u n√∫t NH√ÇN VI√äN
            if (label.equals("\uD83D\uDC68\u200D NH√ÇN VI√äN")) {
                firstButton = button;
            }
        }

        // T·∫°o n√∫t ƒêƒÇNG XU·∫§T
        JButton logoutBT = new JButton("üö™");
        logoutBT.setBackground(new Color(255, 255, 255));
        logoutBT.setBorder(null);
        //b·ªè ch·ªçn
        logoutBT.setFocusPainted(false);
        logoutBT.addActionListener(new ButtonClickListener(this));
        // SET FONT
        logoutBT.setFont(new Font("Arial Unicode MS", Font.BOLD, 60)); // Font h·ªó tr·ª£ t·ªët emoji
        //PENABLE BUTTON
        JPanel logoutPN = new JPanel();
        logoutPN.setLayout(new BorderLayout());
        logoutPN.add(logoutBT);
        leftPanel.add(buttonPanel, BorderLayout.CENTER);
        leftPanel.add(logoutPN, BorderLayout.SOUTH);

        //SET FONT CHO N√öT CU·ªêI C√ôNG B·ª∞ 40
        buttonPanel.getComponent(buttonPanel.getComponentCount()-1).setFont(new Font("Arial Unicode MS", Font.PLAIN, 40));

        // T·∫°o panel b√™n ph·∫£i cho ph·∫ßn hi·ªÉn th·ªã n·ªôi dung ch·ª©c nƒÉng (main panel)
        mainPanel = new JPanel(); // Khai b√°o v√† kh·ªüi t·∫°o mainPanel
        mainPanel.setLayout(new CardLayout());
        mainPanel.setBackground(Color.WHITE); // M√†u n·ªÅn tr·∫Øng cho main panel
        mainPanel.setBorder(BorderFactory.createLineBorder(Color.GRAY, 2)); // ƒê∆∞·ªùng vi·ªÅn ƒë·∫πp cho main panel

        // Th√™m c√°c n·ªôi dung t∆∞∆°ng ·ª©ng cho m·ªói ch·ª©c nƒÉng

        mainPanel.add(new CapTaiKhoanNV(), "\uD83D\uDC68\u200D NH√ÇN VI√äN");
        mainPanel.add(new CapTaiKhoanQL(), "\uD83D\uDC68\u200D QU·∫¢N L√ù");


        // T·∫°o JSplitPane ƒë·ªÉ chia khu v·ª±c b√™n tr√°i v√† b√™n ph·∫£i, b·ªè ƒëi thanh ƒëi·ªÅu ch·ªânh k√≠ch th∆∞·ªõc
        JSplitPane splitPane = new JSplitPane(JSplitPane.HORIZONTAL_SPLIT, leftPanel, mainPanel);
        splitPane.setDividerLocation(110); // Thay ƒë·ªïi k√≠ch th∆∞·ªõc chia tay
        splitPane.setResizeWeight(0.1);    // 10% cho panel tr√°i, 90% cho panel ph·∫£i
        // Th√™m splitPane v√†o frame
        add(splitPane);

        // T·ª± ƒë·ªông ƒë·ªïi m√†u cho n√∫t NH√ÇN VI√äN khi ch∆∞∆°ng tr√¨nh kh·ªüi ƒë·ªông
        if (firstButton != null) {
            firstButton.setBackground(new Color(230,240,255)); // ƒê·ªïi m√†u cho n√∫t ƒê·∫∂T M√ìN
            lastClickedButton = firstButton; // C·∫≠p nh·∫≠t n√∫t ƒë∆∞·ª£c nh·∫•n tr∆∞·ªõc ƒë√≥
        }

        // Hi·ªÉn th·ªã frame
        setVisible(true);
    }

    // Ph∆∞∆°ng th·ª©c t·∫°o n√∫t v·ªõi m√†u s·∫Øc h√†i h√≤a
    private JButton createStyledButton(String text) {
        JButton button = new JButton(text) {
            @Override
            protected void paintComponent(Graphics g) {
                // V·∫Ω h√¨nh d·∫°ng bo tr√≤n
                Graphics2D g2 = (Graphics2D) g;
                g2.setColor(getBackground());
                g2.fillRoundRect(0, 0, getWidth(), getHeight(), 15, 15); // Bo g√≥c v·ªõi b√°n k√≠nh 15
                super.paintComponent(g);
            }
        };
        button.setFocusPainted(false);
        button.setFont(new Font("Arial Unicode MS", Font.PLAIN, 14)); // Font h·ªó tr·ª£ t·ªët emoji
        button.setForeground(new Color(0)); // M√†u ch·ªØ tr·∫Øng n·ªïi b·∫≠t
        button.setBackground(new Color(255, 255, 255)); // M√†u n·ªÅn xanh h√†i h√≤a v·ªõi ƒë·ªô trong su·ªët
        button.setPreferredSize(new Dimension(130, 40)); // ƒê√£ ƒëi·ªÅu ch·ªânh chi·ªÅu r·ªông v√† chi·ªÅu cao c·ªßa n√∫t
        button.setMinimumSize(new Dimension(130, 40)); // K√≠ch th∆∞·ªõc t·ªëi thi·ªÉu
        button.setMaximumSize(new Dimension(130, 40)); // K√≠ch th∆∞·ªõc t·ªëi ƒëa
        button.setBorder(null); // B·ªè vi·ªÅn cho n√∫t
        button.setOpaque(false); // ƒê·∫∑t n√∫t trong su·ªët


        // Hi·ªáu ·ª©ng hover khi r√™ chu·ªôt
        button.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                // N·∫øu n√∫t kh√¥ng ph·∫£i l√† n√∫t ƒë∆∞·ª£c nh·∫•n v√† kh√¥ng ph·∫£i l√† n√∫t qu·∫£n l√Ω
                if (button != lastClickedButton && !button.getText().equals("\uD83C\uDF7D")) {
                    button.setBackground(new Color(230,240,255)); // ƒê·ªïi m√†u n·ªÅn khi r√™ chu·ªôt v√†o
                }
            }

            public void mouseExited(java.awt.event.MouseEvent evt) {
                // N·∫øu n√∫t kh√¥ng ph·∫£i l√† n√∫t ƒë∆∞·ª£c nh·∫•n v√† kh√¥ng ph·∫£i l√† n√∫t qu·∫£n l√Ω
                if (button != lastClickedButton ) {
                    button.setBackground(new Color(255,255,255)); // M√†u n·ªÅn tr·ªü l·∫°i
                }
            }
        });

        return button;
    }

    // L·ªõp x·ª≠ l√Ω s·ª± ki·ªán khi nh·∫•n n√∫t
    private class ButtonClickListener extends Component implements ActionListener {
        private CapTaiKhoan capTaiKhoan; // Tham chi·∫øu ƒë·∫øn capTaiKhoan

        public ButtonClickListener(CapTaiKhoan capTaiKhoan) {
            this.capTaiKhoan = capTaiKhoan; // Kh·ªüi t·∫°o tham chi·∫øu
        }
        @Override
        public void actionPerformed(ActionEvent e) {
            JButton sourceButton = (JButton) e.getSource();
            CardLayout cl = (CardLayout) mainPanel.getLayout();
            String command = sourceButton.getText();

            // Ki·ªÉm tra n√∫t ƒëƒÉng xu·∫•t
            if (command.equals("\uD83D\uDEAA")) {
                int response = JOptionPane.showConfirmDialog(this, "B·∫°n c√≥ ch·∫Øc ch·∫Øn mu·ªën ƒëƒÉng xu·∫•t kh√¥ng?", "X√°c Nh·∫≠n ƒêƒÉng Xu·∫•t", JOptionPane.YES_NO_OPTION);
                if (response == JOptionPane.YES_OPTION) {
                    // N·∫øu ng∆∞·ªùi d√πng ch·ªçn "C√≥", th·ª±c hi·ªán ƒëƒÉng xu·∫•t (ƒë√≥ng JFrame ho·∫∑c chuy·ªÉn ƒë·∫øn m√†n h√¨nh ƒëƒÉng nh·∫≠p)
                    new DangNhap();
                    capTaiKhoan.dispose();
                }
                return; // Tr·ªü ra kh√¥ng th·ª±c hi·ªán c√°c thao t√°c kh√°c
            }

            // ƒê·ªïi m√†u n√∫t ƒë√£ nh·∫•n
            if (lastClickedButton != null) {
                lastClickedButton.setBackground(new Color(255,255,255)); // ƒê·∫∑t l·∫°i m√†u cho n√∫t tr∆∞·ªõc ƒë√≥
            }
            sourceButton.setBackground(new Color(230,240,255)); // ƒê·ªïi m√†u n√∫t hi·ªán t·∫°i
            lastClickedButton = sourceButton; // C·∫≠p nh·∫≠t n√∫t ƒë∆∞·ª£c nh·∫•n tr∆∞·ªõc ƒë√≥

            // Chuy·ªÉn ƒë·ªïi gi·ªØa c√°c n·ªôi dung d·ª±a tr√™n n√∫t nh·∫•n
            switch (command) {
                case "\uD83D\uDC68\u200D NH√ÇN VI√äN":
                    cl.show(mainPanel, "\uD83D\uDC68\u200D NH√ÇN VI√äN");
                    break;
                case "\uD83D\uDC68\u200D QU·∫¢N L√ù":
                    cl.show(mainPanel, "\uD83D\uDC68\u200D QU·∫¢N L√ù");
                    break;
            }
        }

    }
}
